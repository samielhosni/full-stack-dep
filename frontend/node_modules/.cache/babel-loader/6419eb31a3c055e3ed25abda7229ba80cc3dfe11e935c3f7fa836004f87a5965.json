{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elhosnis\\\\Desktop\\\\full-stack-dep\\\\frontend\\\\src\\\\pages\\\\user\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../shared/Sidebar\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDashboard({\n  user,\n  onLogout\n}) {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8083/chat-history/${user.id}`).then(res => res.json()).then(data => setChatHistory(data));\n  }, [user]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(\"http://localhost:5000/query\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: question\n      })\n    });\n    const data = await res.json();\n    setAnswer(data.response);\n    setQuestion(\"\");\n    await fetch(\"http://localhost:8083/chat-history\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        sender: user.username,\n        content: question,\n        timestamp: new Date().toISOString()\n      })\n    });\n    const updated = await fetch(`http://localhost:8083/chat-history/${user.id}`);\n    const updatedData = await updated.json();\n    setChatHistory(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      title: \"Chat History\",\n      items: [...new Set(chatHistory.map(m => m.sender))],\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask a question...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"13H/D+saJslMHjuqPXQzVmS9hqw=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","jsxDEV","_jsxDEV","UserDashboard","user","onLogout","_s","question","setQuestion","answer","setAnswer","chatHistory","setChatHistory","fetch","id","then","res","json","data","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","prompt","response","sender","username","content","timestamp","Date","toISOString","updated","updatedData","className","children","title","items","Set","map","m","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/elhosnis/Desktop/full-stack-dep/frontend/src/pages/user/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"../shared/Sidebar\";\r\nimport \"../App.css\";\r\n\r\nfunction UserDashboard({ user, onLogout }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8083/chat-history/${user.id}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setChatHistory(data));\r\n  }, [user]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"http://localhost:5000/query\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ prompt: question }),\r\n    });\r\n    const data = await res.json();\r\n    setAnswer(data.response);\r\n    setQuestion(\"\");\r\n\r\n    await fetch(\"http://localhost:8083/chat-history\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        sender: user.username,\r\n        content: question,\r\n        timestamp: new Date().toISOString(),\r\n      }),\r\n    });\r\n\r\n    const updated = await fetch(`http://localhost:8083/chat-history/${user.id}`);\r\n    const updatedData = await updated.json();\r\n    setChatHistory(updatedData);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar\r\n        title=\"Chat History\"\r\n        items={[...new Set(chatHistory.map((m) => m.sender))]}\r\n        onLogout={onLogout}\r\n      />\r\n      <div className=\"main-content\">\r\n        <h1>AI Assistant</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n            placeholder=\"Ask a question...\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Ask</button>\r\n        </form>\r\n        {answer && (\r\n          <div className=\"answer-box\">\r\n            <h3>Answer:</h3>\r\n            <p>{answer}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}