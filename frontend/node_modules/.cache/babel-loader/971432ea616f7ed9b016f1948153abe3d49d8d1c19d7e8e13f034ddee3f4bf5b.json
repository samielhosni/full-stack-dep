{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elhosnis\\\\Desktop\\\\full-stack-dep\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport hpeLogo from \"./assets/hpe-logo.png\";\n// .env \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction App({\n  mode,\n  onLogout\n}) {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [requests, setRequests] = useState([]);\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"all\");\n  const harmfulWords = [\"badword1\", \"badword2\", \"spamword\"];\n  const containsHarmfulWord = text => {\n    const lowerText = text.toLowerCase();\n    return harmfulWords.some(word => lowerText.includes(word));\n  };\n  useEffect(() => {\n    const initialRequests = [{\n      id: 1,\n      sender: \"user1\",\n      content: \"Hello!\",\n      timestamp: new Date(\"2025-07-21T10:00:00\")\n    }, {\n      id: 2,\n      sender: \"assistant\",\n      content: \"Hi! How can I assist you?\",\n      timestamp: new Date(\"2025-07-21T10:01:00\")\n    }, {\n      id: 3,\n      sender: \"user1\",\n      content: \"This is a badword1 message.\",\n      timestamp: new Date(\"2025-07-21T10:02:00\")\n    }, {\n      id: 4,\n      sender: \"user2\",\n      content: \"Hey! You are spamword!\",\n      timestamp: new Date(\"2025-07-21T10:03:00\")\n    }, {\n      id: 5,\n      sender: \"user3\",\n      content: \"Something’s not working.\",\n      timestamp: new Date(\"2025-07-21T10:04:00\")\n    }];\n    setRequests(initialRequests);\n    const usersToBan = [...new Set(initialRequests.filter(r => r.sender !== \"assistant\" && containsHarmfulWord(r.content)).map(r => r.sender))];\n    setBannedUsers(usersToBan);\n  }, []);\n  const toggleBanUser = sender => {\n    setBannedUsers(prev => prev.includes(sender) ? prev.filter(u => u !== sender) : [...prev, sender]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await fetch(\"http://localhost:5000/query\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: question\n        })\n      });\n      const data = await res.json();\n      console.log(\"Raw API response:\", data);\n      const responseText = data.response;\n      setAnswer(responseText);\n\n      // Save history to Spring Boot backend\n      await fetch(\"http://localhost:8083/chat-history\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sender: \"user\",\n          // or dynamically get username\n          content: question,\n          timestamp: new Date().toISOString()\n        })\n      });\n      await fetch(\"http://localhost:8083/chat-history\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sender: \"assistant\",\n          content: responseText,\n          timestamp: new Date().toISOString()\n        })\n      });\n    } catch (err) {\n      setAnswer(\"Failed to get response from AI assistant.\");\n    }\n  };\n  const [user, setUser] = useState(null);\n  const [chatHistory, setChatHistory] = useState([]);\n  useEffect(() => {\n    if (user) {\n      fetch(`http://localhost:8083/chat-history/${user.id}`).then(res => res.json()).then(data => setChatHistory(data));\n    }\n  }, [user]);\n  const uniqueSenders = [...new Set(requests.map(r => r.sender))].filter(s => s !== \"assistant\");\n  const filteredRequests = selectedUser === \"all\" ? requests : requests.filter(r => r.sender === selectedUser);\n  if (mode === \"user\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: hpeLogo,\n        alt: \"HPE Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask a question...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        children: answer && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-btn-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"logout-btn\",\n          onClick: onLogout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  if (mode === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hpeLogo,\n          alt: \"Hewlett Packard Enterprise Logo\",\n          className: \"hpe-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Backoffice - Chat Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Filter by user:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setSelectedUser(e.target.value),\n          value: selectedUser,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), uniqueSenders.map(sender => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sender,\n            children: sender\n          }, sender, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        children: filteredRequests.map(r => {\n          const isBanned = bannedUsers.includes(r.sender);\n          const isHarmful = containsHarmfulWord(r.content);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `row ${isBanned ? \"banned-row\" : \"\"} ${isHarmful ? \"harmful-row\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"#\", r.id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: r.sender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), \": \", r.content, \" \", isHarmful && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\",\n                  fontWeight: \"bold\"\n                },\n                children: \"\\u26A0\\uFE0F Harmful content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: new Date(r.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), r.sender !== \"assistant\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleBanUser(r.sender),\n                className: isBanned ? \"unban\" : \"ban\",\n                children: isBanned ? \"Unban\" : \"Ban\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)]\n          }, r.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banned\",\n        children: [\"\\uD83D\\uDD12 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Banned Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 14\n        }, this), \" \", bannedUsers.length > 0 ? bannedUsers.join(\", \") : \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        onClick: onLogout,\n        children: \"D\\xE9connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\n_s(App, \"1fTTNTBWtD8p6ABhZTSoMiuhlJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","hpeLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","App","mode","onLogout","_s","question","setQuestion","answer","setAnswer","requests","setRequests","bannedUsers","setBannedUsers","selectedUser","setSelectedUser","harmfulWords","containsHarmfulWord","text","lowerText","toLowerCase","some","word","includes","initialRequests","id","sender","content","timestamp","Date","usersToBan","Set","filter","r","map","toggleBanUser","prev","u","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","console","log","responseText","response","toISOString","err","user","setUser","chatHistory","setChatHistory","then","uniqueSenders","s","filteredRequests","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","isBanned","isHarmful","style","color","fontWeight","toLocaleString","length","join","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/elhosnis/Desktop/full-stack-dep/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport hpeLogo from \"./assets/hpe-logo.png\";\r\n// .env \r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction App({ mode, onLogout }) {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [requests, setRequests] = useState([]);\r\n  const [bannedUsers, setBannedUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"all\");\r\n\r\n  const harmfulWords = [\"badword1\", \"badword2\", \"spamword\"];\r\n\r\n  const containsHarmfulWord = (text) => {\r\n    const lowerText = text.toLowerCase();\r\n    return harmfulWords.some((word) => lowerText.includes(word));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialRequests = [\r\n      {\r\n        id: 1,\r\n        sender: \"user1\",\r\n        content: \"Hello!\",\r\n        timestamp: new Date(\"2025-07-21T10:00:00\"),\r\n      },\r\n      {\r\n        id: 2,\r\n        sender: \"assistant\",\r\n        content: \"Hi! How can I assist you?\",\r\n        timestamp: new Date(\"2025-07-21T10:01:00\"),\r\n      },\r\n      {\r\n        id: 3,\r\n        sender: \"user1\",\r\n        content: \"This is a badword1 message.\",\r\n        timestamp: new Date(\"2025-07-21T10:02:00\"),\r\n      },\r\n      {\r\n        id: 4,\r\n        sender: \"user2\",\r\n        content: \"Hey! You are spamword!\",\r\n        timestamp: new Date(\"2025-07-21T10:03:00\"),\r\n      },\r\n      {\r\n        id: 5,\r\n        sender: \"user3\",\r\n        content: \"Something’s not working.\",\r\n        timestamp: new Date(\"2025-07-21T10:04:00\"),\r\n      },\r\n    ];\r\n    setRequests(initialRequests);\r\n\r\n    const usersToBan = [\r\n      ...new Set(\r\n        initialRequests\r\n          .filter(\r\n            (r) => r.sender !== \"assistant\" && containsHarmfulWord(r.content)\r\n          )\r\n          .map((r) => r.sender)\r\n      ),\r\n    ];\r\n    setBannedUsers(usersToBan);\r\n  }, []);\r\n\r\n  const toggleBanUser = (sender) => {\r\n    setBannedUsers((prev) =>\r\n      prev.includes(sender) ? prev.filter((u) => u !== sender) : [...prev, sender]\r\n    );\r\n  };\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const res = await fetch(\"http://localhost:5000/query\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ prompt: question }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    console.log(\"Raw API response:\", data);\r\n    const responseText = data.response;\r\n    setAnswer(responseText);\r\n\r\n    // Save history to Spring Boot backend\r\n    await fetch(\"http://localhost:8083/chat-history\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        sender: \"user\", // or dynamically get username\r\n        content: question,\r\n        timestamp: new Date().toISOString(),\r\n      }),\r\n    });\r\n\r\n    await fetch(\"http://localhost:8083/chat-history\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        sender: \"assistant\",\r\n        content: responseText,\r\n        timestamp: new Date().toISOString(),\r\n      }),\r\n    });\r\n\r\n  } catch (err) {\r\n    setAnswer(\"Failed to get response from AI assistant.\");\r\n  }\r\n};\r\nconst [user, setUser] = useState(null);\r\nconst [chatHistory, setChatHistory] = useState([]);\r\n\r\nuseEffect(() => {\r\n  if (user) {\r\n    fetch(`http://localhost:8083/chat-history/${user.id}`)\r\n      .then(res => res.json())\r\n      .then(data => setChatHistory(data));\r\n  }\r\n}, [user]);\r\n\r\n  const uniqueSenders = [...new Set(requests.map((r) => r.sender))].filter(\r\n    (s) => s !== \"assistant\"\r\n  );\r\n  const filteredRequests =\r\n    selectedUser === \"all\"\r\n      ? requests\r\n      : requests.filter((r) => r.sender === selectedUser);\r\n\r\n  if (mode === \"user\") {\r\n    return (\r\n      <div className=\"App\">\r\n        <img src={hpeLogo} alt=\"HPE Logo\" className=\"logo\" />\r\n        <h1>AI Assistant</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={question}\r\n            onChange={(e) => setQuestion(e.target.value)}\r\n            placeholder=\"Ask a question...\"\r\n            required\r\n          />\r\n          <button type=\"submit\">Ask</button>\r\n        </form>\r\n        <div className=\"answer-box\">\r\n          {answer && (\r\n            <>\r\n              <h3>Answer:</h3>\r\n              <p>{answer}</p>\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"logout-btn-container\">\r\n        <button className=\"logout-btn\" onClick={onLogout}>\r\n             Log out\r\n        </button>\r\n</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (mode === \"admin\") {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"logo-container\">\r\n          <img\r\n            src={hpeLogo}\r\n            alt=\"Hewlett Packard Enterprise Logo\"\r\n            className=\"hpe-logo\"\r\n          />\r\n        </div>\r\n\r\n        <h1>Backoffice - Chat Requests</h1>\r\n\r\n        <div className=\"filter\">\r\n          <label>\r\n            <strong>Filter by user:</strong>\r\n          </label>\r\n          <select\r\n            onChange={(e) => setSelectedUser(e.target.value)}\r\n            value={selectedUser}\r\n          >\r\n            <option value=\"all\">All users</option>\r\n            {uniqueSenders.map((sender) => (\r\n              <option key={sender} value={sender}>\r\n                {sender}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"table\">\r\n          {filteredRequests.map((r) => {\r\n            const isBanned = bannedUsers.includes(r.sender);\r\n            const isHarmful = containsHarmfulWord(r.content);\r\n\r\n            return (\r\n              <div\r\n                key={r.id}\r\n                className={`row ${isBanned ? \"banned-row\" : \"\"} ${\r\n                  isHarmful ? \"harmful-row\" : \"\"\r\n                }`}\r\n              >\r\n                <div>\r\n                  <strong>#{r.id}</strong>\r\n                </div>\r\n                <div>\r\n                  <strong>{r.sender}</strong>: {r.content}{\" \"}\r\n                  {isHarmful && (\r\n                    <span style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                      ⚠️ Harmful content\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div>{new Date(r.timestamp).toLocaleString()}</div>\r\n                {r.sender !== \"assistant\" && (\r\n                  <div>\r\n                    <button\r\n                      onClick={() => toggleBanUser(r.sender)}\r\n                      className={isBanned ? \"unban\" : \"ban\"}\r\n                    >\r\n                      {isBanned ? \"Unban\" : \"Ban\"}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"banned\">\r\n          🔒 <strong>Banned Users:</strong>{\" \"}\r\n          {bannedUsers.length > 0 ? bannedUsers.join(\", \") : \"None\"}\r\n        </div>\r\n\r\n        <button style={{ marginTop: \"20px\" }} onClick={onLogout}>\r\n          Déconnexion\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}