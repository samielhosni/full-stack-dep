{"ast":null,"code":"import React,{useState}from\"react\";import{BrowserRouter as Router,Routes,Route,Navigate,useNavigate}from\"react-router-dom\";import Loginn from\"./Loginn\";import App from\"./App\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Root(){const[userRole,setUserRole]=useState(null);// null, \"admin\", or \"user\"\nreturn/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginWrapper,{onLogin:role=>setUserRole(role)})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:userRole===\"admin\"?/*#__PURE__*/_jsx(App,{mode:\"admin\",onLogout:()=>setUserRole(null)}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/user\",element:userRole===\"user\"?/*#__PURE__*/_jsx(App,{mode:\"user\",onLogout:()=>setUserRole(null)}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true})})]})});}// Wrapper for Loginn to handle navigation after login\nfunction LoginWrapper(_ref){let{onLogin}=_ref;const navigate=useNavigate();const handleLogin=foundUser=>{onLogin(foundUser.role);if(foundUser.role===\"admin\"){navigate(\"/admin\",{replace:true});}else if(foundUser.role===\"user\"){navigate(\"/user\",{replace:true});}};return/*#__PURE__*/_jsx(Loginn,{onLogin:handleLogin});}export default Root;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Loginn","App","jsx","_jsx","jsxs","_jsxs","Root","userRole","setUserRole","children","path","element","LoginWrapper","onLogin","role","mode","onLogout","to","replace","_ref","navigate","handleLogin","foundUser"],"sources":["C:/Users/elhosnis/Desktop/full-stack-dep/frontend/src/Root.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport Loginn from \"./Loginn\";\r\nimport App from \"./App\";\r\n\r\nfunction Root() {\r\n  const [userRole, setUserRole] = useState(null); // null, \"admin\", or \"user\"\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Login route */}\r\n        <Route\r\n          path=\"/login\"\r\n          element={<LoginWrapper onLogin={(role) => setUserRole(role)} />}\r\n        />\r\n\r\n        {/* Admin protected route */}\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            userRole === \"admin\" ? (\r\n              <App mode=\"admin\" onLogout={() => setUserRole(null)} />\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n\r\n        {/* User protected route */}\r\n        <Route\r\n          path=\"/user\"\r\n          element={\r\n            userRole === \"user\" ? (\r\n              <App mode=\"user\" onLogout={() => setUserRole(null)} />\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n\r\n        {/* Redirect unknown routes to login */}\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Wrapper for Loginn to handle navigation after login\r\nfunction LoginWrapper({ onLogin }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (foundUser) => {\r\n    onLogin(foundUser.role);\r\n    if (foundUser.role === \"admin\") {\r\n      navigate(\"/admin\", { replace: true });\r\n    } else if (foundUser.role === \"user\") {\r\n      navigate(\"/user\", { replace: true });\r\n    }\r\n  };\r\n\r\n  return <Loginn onLogin={handleLogin} />;\r\n}\r\n\r\nexport default Root;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KAAK,CACLC,QAAQ,CACRC,WAAW,KACN,kBAAkB,CACzB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAAE;AAEhD,mBACEU,IAAA,CAACR,MAAM,EAAAc,QAAA,cACLJ,KAAA,CAACT,MAAM,EAAAa,QAAA,eAELN,IAAA,CAACN,KAAK,EACJa,IAAI,CAAC,QAAQ,CACbC,OAAO,cAAER,IAAA,CAACS,YAAY,EAACC,OAAO,CAAGC,IAAI,EAAKN,WAAW,CAACM,IAAI,CAAE,CAAE,CAAE,CACjE,CAAC,cAGFX,IAAA,CAACN,KAAK,EACJa,IAAI,CAAC,QAAQ,CACbC,OAAO,CACLJ,QAAQ,GAAK,OAAO,cAClBJ,IAAA,CAACF,GAAG,EAACc,IAAI,CAAC,OAAO,CAACC,QAAQ,CAAEA,CAAA,GAAMR,WAAW,CAAC,IAAI,CAAE,CAAE,CAAC,cAEvDL,IAAA,CAACL,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAElC,CACF,CAAC,cAGFf,IAAA,CAACN,KAAK,EACJa,IAAI,CAAC,OAAO,CACZC,OAAO,CACLJ,QAAQ,GAAK,MAAM,cACjBJ,IAAA,CAACF,GAAG,EAACc,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAEA,CAAA,GAAMR,WAAW,CAAC,IAAI,CAAE,CAAE,CAAC,cAEtDL,IAAA,CAACL,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAElC,CACF,CAAC,cAGFf,IAAA,CAACN,KAAK,EAACa,IAAI,CAAC,GAAG,CAACC,OAAO,cAAER,IAAA,CAACL,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAE,CAAE,CAAC,EACvD,CAAC,CACH,CAAC,CAEb,CAEA;AACA,QAAS,CAAAN,YAAYA,CAAAO,IAAA,CAAc,IAAb,CAAEN,OAAQ,CAAC,CAAAM,IAAA,CAC/B,KAAM,CAAAC,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAsB,WAAW,CAAIC,SAAS,EAAK,CACjCT,OAAO,CAACS,SAAS,CAACR,IAAI,CAAC,CACvB,GAAIQ,SAAS,CAACR,IAAI,GAAK,OAAO,CAAE,CAC9BM,QAAQ,CAAC,QAAQ,CAAE,CAAEF,OAAO,CAAE,IAAK,CAAC,CAAC,CACvC,CAAC,IAAM,IAAII,SAAS,CAACR,IAAI,GAAK,MAAM,CAAE,CACpCM,QAAQ,CAAC,OAAO,CAAE,CAAEF,OAAO,CAAE,IAAK,CAAC,CAAC,CACtC,CACF,CAAC,CAED,mBAAOf,IAAA,CAACH,MAAM,EAACa,OAAO,CAAEQ,WAAY,CAAE,CAAC,CACzC,CAEA,cAAe,CAAAf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}