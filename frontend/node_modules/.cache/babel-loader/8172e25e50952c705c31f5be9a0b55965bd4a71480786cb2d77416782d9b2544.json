{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elhosnis\\\\Desktop\\\\frontend\\\\src\\\\Root.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Loginn from \"./Loginn\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Root() {\n  _s();\n  const [userRole, setUserRole] = useState(null); // null, \"admin\", or \"user\"\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginWrapper, {\n          onLogin: role => setUserRole(role)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(App, {\n          mode: \"admin\",\n          onLogout: () => setUserRole(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user\",\n        element: userRole === \"user\" ? /*#__PURE__*/_jsxDEV(App, {\n          mode: \"user\",\n          onLogout: () => setUserRole(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrapper for Loginn to handle navigation after login\n_s(Root, \"C6bAPncfcaG2nuSIoL1CZL5BCqc=\");\n_c = Root;\nfunction LoginWrapper({\n  onLogin\n}) {\n  _s2();\n  const navigate = useNavigate();\n  const handleLogin = foundUser => {\n    onLogin(foundUser.role);\n    if (foundUser.role === \"admin\") {\n      navigate(\"/admin\", {\n        replace: true\n      });\n    } else if (foundUser.role === \"user\") {\n      navigate(\"/user\", {\n        replace: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Loginn, {\n    onLogin: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_s2(LoginWrapper, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c2 = LoginWrapper;\nexport default Root;\nvar _c, _c2;\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"LoginWrapper\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Loginn","App","jsxDEV","_jsxDEV","Root","_s","userRole","setUserRole","children","path","element","LoginWrapper","onLogin","role","fileName","_jsxFileName","lineNumber","columnNumber","mode","onLogout","to","replace","_c","_s2","navigate","handleLogin","foundUser","_c2","$RefreshReg$"],"sources":["C:/Users/elhosnis/Desktop/frontend/src/Root.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\nimport Loginn from \"./Loginn\";\r\nimport App from \"./App\";\r\n\r\nfunction Root() {\r\n  const [userRole, setUserRole] = useState(null); // null, \"admin\", or \"user\"\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Login route */}\r\n        <Route\r\n          path=\"/login\"\r\n          element={<LoginWrapper onLogin={(role) => setUserRole(role)} />}\r\n        />\r\n\r\n        {/* Admin protected route */}\r\n        <Route\r\n          path=\"/admin\"\r\n          element={\r\n            userRole === \"admin\" ? (\r\n              <App mode=\"admin\" onLogout={() => setUserRole(null)} />\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n\r\n        {/* User protected route */}\r\n        <Route\r\n          path=\"/user\"\r\n          element={\r\n            userRole === \"user\" ? (\r\n              <App mode=\"user\" onLogout={() => setUserRole(null)} />\r\n            ) : (\r\n              <Navigate to=\"/login\" replace />\r\n            )\r\n          }\r\n        />\r\n\r\n        {/* Redirect unknown routes to login */}\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\n// Wrapper for Loginn to handle navigation after login\r\nfunction LoginWrapper({ onLogin }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (foundUser) => {\r\n    onLogin(foundUser.role);\r\n    if (foundUser.role === \"admin\") {\r\n      navigate(\"/admin\", { replace: true });\r\n    } else if (foundUser.role === \"user\") {\r\n      navigate(\"/user\", { replace: true });\r\n    }\r\n  };\r\n\r\n  return <Loginn onLogin={handleLogin} />;\r\n}\r\n\r\nexport default Root;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}