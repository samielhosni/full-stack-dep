{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elhosnis\\\\Desktop\\\\full-stack-dep\\\\frontend\\\\src\\\\pages\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Sidebar from \"../shared/Sidebar\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst harmfulWords = [\"badword1\", \"badword2\", \"spamword\"];\nconst containsHarmful = text => harmfulWords.some(word => text.toLowerCase().includes(word));\nfunction AdminDashboard({\n  onLogout\n}) {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"all\");\n  useEffect(() => {\n    const reqs = [{\n      id: 1,\n      sender: \"user1\",\n      content: \"Hello!\",\n      timestamp: new Date()\n    }, {\n      id: 2,\n      sender: \"user2\",\n      content: \"You spamword.\",\n      timestamp: new Date()\n    }];\n    setRequests(reqs);\n    const toBan = [...new Set(reqs.filter(r => r.sender !== \"assistant\" && containsHarmful(r.content)).map(r => r.sender))];\n    setBannedUsers(toBan);\n  }, []);\n  const toggleBan = user => {\n    setBannedUsers(prev => prev.includes(user) ? prev.filter(u => u !== user) : [...prev, user]);\n  };\n  const users = [...new Set(requests.map(r => r.sender))];\n  const filtered = selectedUser === \"all\" ? requests : requests.filter(r => r.sender === selectedUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      title: \"Users\",\n      items: users,\n      onSelect: setSelectedUser,\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), filtered.map(r => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `row ${bannedUsers.includes(r.sender) ? \"banned-row\" : \"\"} ${containsHarmful(r.content) ? \"harmful-row\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: r.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this), \": \", r.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(r.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleBan(r.sender),\n          children: bannedUsers.includes(r.sender) ? \"Unban\" : \"Ban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, r.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"T3DedEKBjmGK0HhxN+Il2zqG1xc=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","jsxDEV","_jsxDEV","harmfulWords","containsHarmful","text","some","word","toLowerCase","includes","AdminDashboard","onLogout","_s","requests","setRequests","bannedUsers","setBannedUsers","selectedUser","setSelectedUser","reqs","id","sender","content","timestamp","Date","toBan","Set","filter","r","map","toggleBan","user","prev","u","users","filtered","className","children","title","items","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/elhosnis/Desktop/full-stack-dep/frontend/src/pages/admin/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Sidebar from \"../shared/Sidebar\";\r\nimport \"../App.css\";\r\n\r\nconst harmfulWords = [\"badword1\", \"badword2\", \"spamword\"];\r\nconst containsHarmful = (text) =>\r\n  harmfulWords.some((word) => text.toLowerCase().includes(word));\r\n\r\nfunction AdminDashboard({ onLogout }) {\r\n  const [requests, setRequests] = useState([]);\r\n  const [bannedUsers, setBannedUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    const reqs = [\r\n      { id: 1, sender: \"user1\", content: \"Hello!\", timestamp: new Date() },\r\n      { id: 2, sender: \"user2\", content: \"You spamword.\", timestamp: new Date() },\r\n    ];\r\n    setRequests(reqs);\r\n    const toBan = [\r\n      ...new Set(\r\n        reqs\r\n          .filter((r) => r.sender !== \"assistant\" && containsHarmful(r.content))\r\n          .map((r) => r.sender)\r\n      ),\r\n    ];\r\n    setBannedUsers(toBan);\r\n  }, []);\r\n\r\n  const toggleBan = (user) => {\r\n    setBannedUsers((prev) =>\r\n      prev.includes(user) ? prev.filter((u) => u !== user) : [...prev, user]\r\n    );\r\n  };\r\n\r\n  const users = [...new Set(requests.map((r) => r.sender))];\r\n  const filtered =\r\n    selectedUser === \"all\"\r\n      ? requests\r\n      : requests.filter((r) => r.sender === selectedUser);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Sidebar title=\"Users\" items={users} onSelect={setSelectedUser} onLogout={onLogout} />\r\n      <div className=\"main-content\">\r\n        <h1>Admin Panel</h1>\r\n        {filtered.map((r) => (\r\n          <div\r\n            key={r.id}\r\n            className={`row ${\r\n              bannedUsers.includes(r.sender) ? \"banned-row\" : \"\"\r\n            } ${containsHarmful(r.content) ? \"harmful-row\" : \"\"}`}\r\n          >\r\n            <div><strong>{r.sender}</strong>: {r.content}</div>\r\n            <div>{new Date(r.timestamp).toLocaleString()}</div>\r\n            <button onClick={() => toggleBan(r.sender)}>\r\n              {bannedUsers.includes(r.sender) ? \"Unban\" : \"Ban\"}\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}